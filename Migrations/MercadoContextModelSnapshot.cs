// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MVC.Migrations
{
    [DbContext(typeof(MercadoContext))]
    partial class MercadoContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MVC.Models.Pago", b =>
                {
                    b.Property<int>("IdPago")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdPago"));

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdPersonal")
                        .HasColumnType("int");

                    b.Property<int>("IdPuesto")
                        .HasColumnType("int");

                    b.Property<int>("IdTipoServicio")
                        .HasColumnType("int");

                    b.Property<decimal>("Monto")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("IdPago");

                    b.HasIndex("IdPersonal");

                    b.HasIndex("IdPuesto");

                    b.HasIndex("IdTipoServicio");

                    b.ToTable("Pagos");
                });

            modelBuilder.Entity("MVC.Models.Personal", b =>
                {
                    b.Property<int>("IdPersonal")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdPersonal"));

                    b.Property<string>("Ci")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdPersonal");

                    b.ToTable("Personales");
                });

            modelBuilder.Entity("MVC.Models.Puesto", b =>
                {
                    b.Property<int>("IdPuesto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdPuesto"));

                    b.Property<int>("Bloque")
                        .HasColumnType("int");

                    b.Property<string>("Persona")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Rubro")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdPuesto");

                    b.ToTable("Puestos");
                });

            modelBuilder.Entity("MVC.Models.TipoServicio", b =>
                {
                    b.Property<int>("IdTipoServicio")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdTipoServicio"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdTipoServicio");

                    b.ToTable("TiposServicio");
                });

            modelBuilder.Entity("MVC.Models.Pago", b =>
                {
                    b.HasOne("MVC.Models.Personal", "Personal")
                        .WithMany()
                        .HasForeignKey("IdPersonal")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MVC.Models.Puesto", "Puesto")
                        .WithMany()
                        .HasForeignKey("IdPuesto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MVC.Models.TipoServicio", "TipoServicio")
                        .WithMany()
                        .HasForeignKey("IdTipoServicio")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Personal");

                    b.Navigation("Puesto");

                    b.Navigation("TipoServicio");
                });
#pragma warning restore 612, 618
        }
    }
}
